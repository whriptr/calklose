// 8b 

#include <iostream>
//#include <string>
//#include <iomanip>
#include <fstream>
#include <vector>
using namespace std;

int main()
{
	ifstream sortedNumbersFile;
	sortedNumbersFile.open("sortedBubbleData.txt");
	vector<int> searchArray;
	int temp;

	if (!sortedNumbersFile)
		cout << "error file not open";
	else
	{
		cout << "creating array...\n";
		while (!sortedNumbersFile.eof())
		{
			sortedNumbersFile >> temp;
			searchArray.push_back(temp);
		}
		cout << "done\n";
	}

	for (int val : searchArray)
	{
		cout << val << endl;
	}

	int value = 0;  // search value
	cout << "enter a number ";
	cin >> value;
	cin.ignore();
	//cin.clear();
	int total = 0;
	int index = 0; // Used as a subscript to search array
	//int position = -1; // To record position of search value
	bool found = false; // Flag to indicate if the value was found
	
	while (index < searchArray.size() && !found)
	{
		if (searchArray[index] == value) // If the value is found
		{
			found = true; // Set the flag
			//position = index; // Record the value's subscript
		}
		total++;
		index++; // Go to the next element
	}
	if (!found)
		cout << "number not found and " << total << "steps\n";
	else
		cout << "binary search steps " << total << endl;

	cout << "enter a number ";
	cin >> value;
	cin.ignore();
	int first = 0, // First array element
		last = searchArray.size() - 1, // Last array element
		middle, // Midpoint of search
		position = -1; // Position of search value
	total = 0;
	found = false; // Flag

	while (!found && first <= last)
	{
		middle = (first + last) / 2; // Calculate midpoint
		if (searchArray[middle] == value) // If value is found at mid
		{
			found = true;
			position = middle;
		}
		else if (searchArray[middle] > value) // If value is in lower half
			last = middle - 1;
		else
			first = middle + 1; // If value is in upper half
		total++;
	}
	if (!found)
		cout << "number not found and " << total << "steps\n";
	else
		cout << "binary search steps " << total << endl;

	cout << "press enter to close program";
	cin.get();
	return 0;
}